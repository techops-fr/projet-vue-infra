apiVersion: v1
kind: Secret
metadata:
  name: s3cmd-secret
  #namespace: backup-mongodb
type: Opaque
data:
  access_key: RE8wMFc2VkFRQkdONEo0OE45VUw=  # <base64-encoded-access-key> obtenu avec 'echo -n xxxx | base64'
  secret_key: UjFVWnNWN1JHTERrU3lNdGVRVS9zRUpidDhSQTFRbytTM0hIT01jcmNXZw== # <base64-encoded-secret-key> obtenu avec 'echo -n xxxx | base64'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3cmd-config
  #namespace: backup-mongodb
data:
  s3cfg: |
    [default]
    access_key = ACCESS_KEY_PLACEHOLDER
    secret_key = SECRET_KEY_PLACEHOLDER
    host_base = fra1.digitaloceanspaces.com
    host_bucket = %(bucket)s.fra1.digitaloceanspaces.com
    signature_v2 = False
    use_https = True
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-test-s3
  #namespace: backup-mongodb
spec:
  volumes:
  - name: s3cmd-config-volume
    configMap:
      name: s3cmd-config
  containers:
  - name: s3cmd-pod
    #image: d3fk/s3cmd:latest
    # image: vincentfr/s3mongo
    image: alpine:latest
    command: ["sleep", "infinity"]
    env:
    - name: MONGODB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mongodb        # Nom du Secret (cf: kubctl get secrets) - crée à l'instal de mongodb avec Helm
          key: mongodb-root-password # La clé (cf: kubctl describle secrets mongodb)
    - name: MONGODB_USER
      value: root
    - name: MONGODB_HOST
      #value: mongodb:27017           # Pour architecture en standalone
      value: mongodb-headless:27017   # Pour architecture en replicaset
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: s3cmd-secret
          key: access_key
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: s3cmd-secret
          key: secret_key
    volumeMounts:
    - name: s3cmd-config-volume
      mountPath: /tmp/.s3cfg
      subPath: s3cfg
      readOnly: false